{"ast":null,"code":"var _jsxFileName = \"/home/ugrads/majors/hiwot/Multimedia/client/src/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('File uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = FileUpload;\nexport default FileUpload;\n\n// import React, { useState, useRef } from 'react';\n// import { useButton } from '@mui/base/useButton';\n// import styled from 'styled-components';\n\n// function App() {\n//   const [file, setFile] = useState(null);\n//   const { getRootProps } = useButton();\n//   const fileInputRef = useRef(null);\n//   const [analysisResults, setAnalysisResults] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     const selectedFile = event.target.files[0];\n//     if (selectedFile && selectedFile.type === 'text/html') {\n//       setFile(selectedFile);\n//     } else {\n//       alert('Please select a valid HTML file.');\n//     }\n//   };\n\n//   const handleUpload = async () => {\n\n//     if (!file) {\n//       alert('Please select a file before uploading.');\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await fetch('/upload', {\n//         method: 'POST',\n//         body: formData\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       console.log('Upload successful:', data);\n//       setAnalysisResults(data);\n\n//    if (data.ner_results) {\n//       // Handle NER results, e.g., update state or display in the UI\n//       console.log('NER Results:', data.ner_results);\n//     }\n\n//     if (data.sentiment_results) {\n//       // Handle sentiment results\n//       console.log('Sentiment Results:', data.sentiment_results);\n//     }\n\n//     if (data.lm_results) {\n//       // Handle LLM results\n//       console.log('LM Results:', data.lm_results);\n//     }\n\n//     } catch (error) {\n//       console.error('There was an error uploading the file:', error);\n//       alert('There was an error uploading the file. Please try again.');\n//     }\n//   };\n\n//   const handleUploadButtonClick = () => {\n//     fileInputRef.current.click();\n//   };\n\n//   return (\n//     <Container>\n//       <Header>News Coverage Analysis</Header>\n//       <UploadSection>\n//       <StyledButton onClick={() => { handleUpload(); handleUploadButtonClick(); }}>\n//   Upload\n// </StyledButton>\n//         <FileInput\n//           ref={fileInputRef}\n//           type=\"file\"\n//           onChange={handleFileChange}\n//         />\n//        {analysisResults && (\n//   <AnalysisResults>\n//     <h3>Analysis Results:</h3>\n//     <div className=\"result-section\">\n//       <h4>NER Results:</h4>\n//       <pre>{JSON.stringify(analysisResults.ner_results, null, 2)}</pre>\n//     </div>\n//     <div className=\"result-section\">\n//       <h4>Sentiment Results:</h4>\n//       <pre>{JSON.stringify(analysisResults.sentiment_results, null, 2)}</pre>\n//     </div>\n//     <div className=\"result-section\">\n//       <h4>LM Results:</h4>\n//       <pre>{JSON.stringify(analysisResults.lm_results, null, 2)}</pre>\n//     </div>\n//   </AnalysisResults>\n// )}\n//       </UploadSection>\n//     </Container>\n//   );\n// }\n\n// // Styled components from MUI\n// const Container = styled.div`\n//   text-align: center;\n// `;\n\n// const Header = styled.h2`\n//   color: #BF4F74;\n// `;\n\n// const UploadSection = styled.div`\n//   margin-top: 20px;\n// `;\n\n// const StyledButton = styled.button`\n//   background: #BF4F74;\n//   border: none;\n//   border-radius: 5px;\n//   color: white;\n//   padding: 10px 20px;\n//   cursor: pointer;\n//   transition: background 0.3s ease;\n\n//   &:hover {\n//     background: #A43B5B;\n//   }\n// `;\n\n// const FileInput = styled.input`\n//   display: none; \n// `;\n\n// const AnalysisResults = styled.div`\n//   margin-top: 20px;\n//   padding: 10px;\n//   background: #f0f0f0;\n//   border-radius: 5px;\n\n//   h3 {\n//     color: #BF4F74;\n//   }\n// `;\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","console","log","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/ugrads/majors/hiwot/Multimedia/client/src/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n    const [file, setFile] = useState(null);\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const handleUpload = async () => {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            await axios.post('http://localhost:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            console.log('File uploaded successfully');\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        }\n    };\n\n    return (\n        <div>\n            <input type=\"file\" onChange={handleFileChange} />\n            <button onClick={handleUpload}>Upload</button>\n        </div>\n    );\n};\n\nexport default FileUpload;\n\n\n\n\n// import React, { useState, useRef } from 'react';\n// import { useButton } from '@mui/base/useButton';\n// import styled from 'styled-components';\n\n\n\n// function App() {\n//   const [file, setFile] = useState(null);\n//   const { getRootProps } = useButton();\n//   const fileInputRef = useRef(null);\n//   const [analysisResults, setAnalysisResults] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     const selectedFile = event.target.files[0];\n//     if (selectedFile && selectedFile.type === 'text/html') {\n//       setFile(selectedFile);\n//     } else {\n//       alert('Please select a valid HTML file.');\n//     }\n//   };\n\n//   const handleUpload = async () => {\n   \n//     if (!file) {\n//       alert('Please select a file before uploading.');\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await fetch('/upload', {\n//         method: 'POST',\n//         body: formData\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! Status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       console.log('Upload successful:', data);\n//       setAnalysisResults(data);\n\n//    if (data.ner_results) {\n//       // Handle NER results, e.g., update state or display in the UI\n//       console.log('NER Results:', data.ner_results);\n//     }\n\n//     if (data.sentiment_results) {\n//       // Handle sentiment results\n//       console.log('Sentiment Results:', data.sentiment_results);\n//     }\n\n//     if (data.lm_results) {\n//       // Handle LLM results\n//       console.log('LM Results:', data.lm_results);\n//     }\n\n\n//     } catch (error) {\n//       console.error('There was an error uploading the file:', error);\n//       alert('There was an error uploading the file. Please try again.');\n//     }\n//   };\n\n//   const handleUploadButtonClick = () => {\n//     fileInputRef.current.click();\n//   };\n\n//   return (\n//     <Container>\n//       <Header>News Coverage Analysis</Header>\n//       <UploadSection>\n//       <StyledButton onClick={() => { handleUpload(); handleUploadButtonClick(); }}>\n//   Upload\n// </StyledButton>\n//         <FileInput\n//           ref={fileInputRef}\n//           type=\"file\"\n//           onChange={handleFileChange}\n//         />\n//        {analysisResults && (\n//   <AnalysisResults>\n//     <h3>Analysis Results:</h3>\n//     <div className=\"result-section\">\n//       <h4>NER Results:</h4>\n//       <pre>{JSON.stringify(analysisResults.ner_results, null, 2)}</pre>\n//     </div>\n//     <div className=\"result-section\">\n//       <h4>Sentiment Results:</h4>\n//       <pre>{JSON.stringify(analysisResults.sentiment_results, null, 2)}</pre>\n//     </div>\n//     <div className=\"result-section\">\n//       <h4>LM Results:</h4>\n//       <pre>{JSON.stringify(analysisResults.lm_results, null, 2)}</pre>\n//     </div>\n//   </AnalysisResults>\n// )}\n//       </UploadSection>\n//     </Container>\n//   );\n// }\n\n// // Styled components from MUI\n// const Container = styled.div`\n//   text-align: center;\n// `;\n\n// const Header = styled.h2`\n//   color: #BF4F74;\n// `;\n\n// const UploadSection = styled.div`\n//   margin-top: 20px;\n// `;\n\n// const StyledButton = styled.button`\n//   background: #BF4F74;\n//   border: none;\n//   border-radius: 5px;\n//   color: white;\n//   padding: 10px 20px;\n//   cursor: pointer;\n//   transition: background 0.3s ease;\n\n//   &:hover {\n//     background: #A43B5B;\n//   }\n// `;\n\n// const FileInput = styled.input`\n//   display: none; \n// `;\n\n// const AnalysisResults = styled.div`\n//   margin-top: 20px;\n//   padding: 10px;\n//   background: #f0f0f0;\n//   border-radius: 5px;\n\n//   h3 {\n//     color: #BF4F74;\n//   }\n// `;\n\n// export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC5BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAE7B,IAAI;MACA,MAAML,KAAK,CAACe,IAAI,CAAC,8BAA8B,EAAEH,QAAQ,EAAE;QACvDI,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEf;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDxB,OAAA;MAAQyB,OAAO,EAAEhB,YAAa;MAAAS,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAACtB,EAAA,CA9BID,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAgChB,eAAeA,UAAU;;AAKzB;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}