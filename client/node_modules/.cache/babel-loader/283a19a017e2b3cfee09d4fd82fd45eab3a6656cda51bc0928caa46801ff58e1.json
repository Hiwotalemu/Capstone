{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rayya\\\\OneDrive - Virginia Tech\\\\Desktop\\\\Capstone\\\\Capstone\\\\client\\\\src\\\\Components\\\\Analysis\\\\DataDisplayComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n_c = StyledTable;\nconst StyledTableHeader = styled.th`\n  background-color: #f9f9f9;\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n`;\n_c2 = StyledTableHeader;\nconst StyledTableRow = styled.tr`\n  cursor: pointer;\n  &:hover {\n    background-color: #f2f2f2;\n  }\n`;\n_c3 = StyledTableRow;\nconst StyledTableCell = styled.td`\n  border: 1px solid #ddd;\n  padding: 8px;\n  white-space: nowrap; /* Prevents content from wrapping */\n  overflow: hidden; /* Hide overflowing content */\n  text-overflow: ellipsis; /* Display ellipsis for overflowed content */\n`;\n_c4 = StyledTableCell;\nconst ExpandableRowContent = styled.div`\n  padding: 8px;\n  margin-top: 8px;\n  background-color: #f0f0f0;\n`;\n_c5 = ExpandableRowContent;\nconst DataDisplayComponent = ({\n  dataArray\n}) => {\n  _s();\n  const [expandedRow, setExpandedRow] = useState(null);\n  const handleRowClick = id => {\n    setExpandedRow(prevExpandedRow => prevExpandedRow === id ? null : id);\n  };\n  const formatDomainLinks = domainLinks => {\n    return Array.isArray(domainLinks) ? domainLinks.map((link, linkIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: link,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, linkIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: domainLinks || '#',\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: domainLinks || 'N/A'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledTable, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n          children: \"Filename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n          children: \"Sentiment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n          children: \"Keywords\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n          children: \"Upload Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n          children: \"Domain Links\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: dataArray.map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(StyledTableRow, {\n          onClick: () => handleRowClick(item._id),\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: item.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: item.sentiment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: Array.isArray(item.keywords) ? item.keywords.join(', ') : item.keywords || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: item.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: item.upload_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: formatDomainLinks(item.domain_links)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), expandedRow === item._id && /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            colSpan: \"6\",\n            children: /*#__PURE__*/_jsxDEV(ExpandableRowContent, {\n              children: \"Detailed analysis information or additional data...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(DataDisplayComponent, \"go2rronGqZdKt5Pa5KNVQS2xXUc=\");\n_c6 = DataDisplayComponent;\nexport default DataDisplayComponent;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"StyledTable\");\n$RefreshReg$(_c2, \"StyledTableHeader\");\n$RefreshReg$(_c3, \"StyledTableRow\");\n$RefreshReg$(_c4, \"StyledTableCell\");\n$RefreshReg$(_c5, \"ExpandableRowContent\");\n$RefreshReg$(_c6, \"DataDisplayComponent\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","StyledTable","table","_c","StyledTableHeader","th","_c2","StyledTableRow","tr","_c3","StyledTableCell","td","_c4","ExpandableRowContent","div","_c5","DataDisplayComponent","dataArray","_s","expandedRow","setExpandedRow","handleRowClick","id","prevExpandedRow","formatDomainLinks","domainLinks","Array","isArray","map","link","linkIndex","children","href","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","item","Fragment","onClick","_id","filename","sentiment","keywords","join","score","upload_date","domain_links","colSpan","_c6","$RefreshReg$"],"sources":["C:/Users/rayya/OneDrive - Virginia Tech/Desktop/Capstone/Capstone/client/src/Components/Analysis/DataDisplayComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n`;\r\n\r\nconst StyledTableHeader = styled.th`\r\n  background-color: #f9f9f9;\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n`;\r\n\r\nconst StyledTableRow = styled.tr`\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #f2f2f2;\r\n  }\r\n`;\r\n\r\nconst StyledTableCell = styled.td`\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  white-space: nowrap; /* Prevents content from wrapping */\r\n  overflow: hidden; /* Hide overflowing content */\r\n  text-overflow: ellipsis; /* Display ellipsis for overflowed content */\r\n`;\r\n\r\nconst ExpandableRowContent = styled.div`\r\n  padding: 8px;\r\n  margin-top: 8px;\r\n  background-color: #f0f0f0;\r\n`;\r\n\r\nconst DataDisplayComponent = ({ dataArray }) => {\r\n  const [expandedRow, setExpandedRow] = useState(null);\r\n\r\n  const handleRowClick = (id) => {\r\n    setExpandedRow((prevExpandedRow) => (prevExpandedRow === id ? null : id));\r\n  };\r\n\r\n  const formatDomainLinks = (domainLinks) => {\r\n    return Array.isArray(domainLinks)\r\n      ? domainLinks.map((link, linkIndex) => (\r\n          <div key={linkIndex}>\r\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {link}\r\n            </a>\r\n          </div>\r\n        ))\r\n      : (\r\n          <div>\r\n            <a href={domainLinks || '#'} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {domainLinks || 'N/A'}\r\n            </a>\r\n          </div>\r\n        );\r\n  };\r\n\r\n  return (\r\n    <StyledTable>\r\n      <thead>\r\n        <tr>\r\n          <StyledTableHeader>Filename</StyledTableHeader>\r\n          <StyledTableHeader>Sentiment</StyledTableHeader>\r\n          <StyledTableHeader>Keywords</StyledTableHeader>\r\n          <StyledTableHeader>Score</StyledTableHeader>\r\n          <StyledTableHeader>Upload Date</StyledTableHeader>\r\n          <StyledTableHeader>Domain Links</StyledTableHeader>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {dataArray.map((item) => (\r\n          <React.Fragment key={item._id}>\r\n            <StyledTableRow onClick={() => handleRowClick(item._id)}>\r\n              <StyledTableCell>{item.filename}</StyledTableCell>\r\n              <StyledTableCell>{item.sentiment}</StyledTableCell>\r\n              <StyledTableCell>{Array.isArray(item.keywords) ? item.keywords.join(', ') : item.keywords || 'N/A'}</StyledTableCell>\r\n              <StyledTableCell>{item.score}</StyledTableCell>\r\n              <StyledTableCell>{item.upload_date}</StyledTableCell>\r\n              <StyledTableCell>\r\n                {formatDomainLinks(item.domain_links)}\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n            {\r\n              expandedRow === item._id && (\r\n                <StyledTableRow>\r\n                  <StyledTableCell colSpan=\"6\">\r\n                    <ExpandableRowContent>\r\n                      {/* Render more details here */}\r\n                      {/* For example: */}\r\n                      Detailed analysis information or additional data...\r\n                    </ExpandableRowContent>\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              )\r\n            }\r\n          </React.Fragment>\r\n        ))}\r\n      </tbody>\r\n    </StyledTable>\r\n  );\r\n};\r\n\r\nexport default DataDisplayComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGH,MAAM,CAACI,KAAM;AACjC;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,WAAW;AAKjB,MAAMG,iBAAiB,GAAGN,MAAM,CAACO,EAAG;AACpC;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,iBAAiB;AAOvB,MAAMG,cAAc,GAAGT,MAAM,CAACU,EAAG;AACjC;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,cAAc;AAOpB,MAAMG,eAAe,GAAGZ,MAAM,CAACa,EAAG;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,eAAe;AAQrB,MAAMG,oBAAoB,GAAGf,MAAM,CAACgB,GAAI;AACxC;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,oBAAoB;AAM1B,MAAMG,oBAAoB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMwB,cAAc,GAAIC,EAAE,IAAK;IAC7BF,cAAc,CAAEG,eAAe,IAAMA,eAAe,KAAKD,EAAE,GAAG,IAAI,GAAGA,EAAG,CAAC;EAC3E,CAAC;EAED,MAAME,iBAAiB,GAAIC,WAAW,IAAK;IACzC,OAAOC,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,GAC7BA,WAAW,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,SAAS,kBAC9B9B,OAAA;MAAA+B,QAAA,eACE/B,OAAA;QAAGgC,IAAI,EAAEH,IAAK;QAACI,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAH,QAAA,EACrDF;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC,GAHIR,SAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACN,CAAC,gBAEAtC,OAAA;MAAA+B,QAAA,eACE/B,OAAA;QAAGgC,IAAI,EAAEP,WAAW,IAAI,GAAI;QAACQ,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAH,QAAA,EACnEN,WAAW,IAAI;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN;EACP,CAAC;EAED,oBACEtC,OAAA,CAACC,WAAW;IAAA8B,QAAA,gBACV/B,OAAA;MAAA+B,QAAA,eACE/B,OAAA;QAAA+B,QAAA,gBACE/B,OAAA,CAACI,iBAAiB;UAAA2B,QAAA,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eAC/CtC,OAAA,CAACI,iBAAiB;UAAA2B,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eAChDtC,OAAA,CAACI,iBAAiB;UAAA2B,QAAA,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eAC/CtC,OAAA,CAACI,iBAAiB;UAAA2B,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eAC5CtC,OAAA,CAACI,iBAAiB;UAAA2B,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eAClDtC,OAAA,CAACI,iBAAiB;UAAA2B,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRtC,OAAA;MAAA+B,QAAA,EACGd,SAAS,CAACW,GAAG,CAAEW,IAAI,iBAClBvC,OAAA,CAACJ,KAAK,CAAC4C,QAAQ;QAAAT,QAAA,gBACb/B,OAAA,CAACO,cAAc;UAACkC,OAAO,EAAEA,CAAA,KAAMpB,cAAc,CAACkB,IAAI,CAACG,GAAG,CAAE;UAAAX,QAAA,gBACtD/B,OAAA,CAACU,eAAe;YAAAqB,QAAA,EAAEQ,IAAI,CAACI;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAAC,eAClDtC,OAAA,CAACU,eAAe;YAAAqB,QAAA,EAAEQ,IAAI,CAACK;UAAS;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAAC,eACnDtC,OAAA,CAACU,eAAe;YAAAqB,QAAA,EAAEL,KAAK,CAACC,OAAO,CAACY,IAAI,CAACM,QAAQ,CAAC,GAAGN,IAAI,CAACM,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC,GAAGP,IAAI,CAACM,QAAQ,IAAI;UAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAAC,eACrHtC,OAAA,CAACU,eAAe;YAAAqB,QAAA,EAAEQ,IAAI,CAACQ;UAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAAC,eAC/CtC,OAAA,CAACU,eAAe;YAAAqB,QAAA,EAAEQ,IAAI,CAACS;UAAW;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CAAC,eACrDtC,OAAA,CAACU,eAAe;YAAAqB,QAAA,EACbP,iBAAiB,CAACe,IAAI,CAACU,YAAY;UAAC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,EAEfnB,WAAW,KAAKoB,IAAI,CAACG,GAAG,iBACtB1C,OAAA,CAACO,cAAc;UAAAwB,QAAA,eACb/B,OAAA,CAACU,eAAe;YAACwC,OAAO,EAAC,GAAG;YAAAnB,QAAA,eAC1B/B,OAAA,CAACa,oBAAoB;cAAAkB,QAAA,EAEC;YAEtB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAsB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACjB;MAAA,GAtBgBC,IAAI,CAACG,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwBb,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAElB,CAAC;AAACpB,EAAA,CApEIF,oBAAoB;AAAAmC,GAAA,GAApBnC,oBAAoB;AAsE1B,eAAeA,oBAAoB;AAAC,IAAAb,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAoC,GAAA;AAAAC,YAAA,CAAAjD,EAAA;AAAAiD,YAAA,CAAA9C,GAAA;AAAA8C,YAAA,CAAA3C,GAAA;AAAA2C,YAAA,CAAAxC,GAAA;AAAAwC,YAAA,CAAArC,GAAA;AAAAqC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}